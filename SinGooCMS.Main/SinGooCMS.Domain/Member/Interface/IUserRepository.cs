//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-03-31 11:10:40
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;
using SinGooCMS.Domain.Models;

namespace SinGooCMS.Domain.Interface
{
    public interface IUserRepository : IRepositoryBase<UserInfo>
    {
        #region 会员注册

        /// <summary>
        /// 快捷注册
        /// </summary>
        /// <param name="userInfo"></param>
        /// <returns></returns>
        Task<(Result OpResult, int UserId)> Reg(UserInfo userInfo);

        /// <summary>
        /// 会员注册
        /// </summary>
        /// <param name="userInfo"></param>
        /// <param name="dicField"></param>
        /// <returns></returns>
        Task<(Result OpResult, int UserId)> Reg(UserInfo userInfo, Dictionary<string, UserFieldInfo> dicField);

        #endregion        

        #region 会员登录       

        /// <summary>
        /// 会员登录
        /// </summary>
        /// <param name="loginName">登录名</param>
        /// <param name="password">密码</param>
        /// <returns></returns>
        Task<(Result OpResult, UserInfo UserReturn)> UserLogin(string loginName, string password);

        /// <summary>
        /// 获取加密后的密码串(两次MD5加密)
        /// </summary>
        /// <param name="origialPwd"></param>
        /// <returns></returns>
        string GetEncodePwd(string origialPwd);

        #endregion        

        #region 会员更新
        /// <summary>
        /// 更新资料
        /// </summary>
        /// <param name="userInfo"></param>
        /// <param name="dicField"></param>
        /// <returns></returns>
        Task<Result> Update(UserInfo userInfo, Dictionary<string, UserFieldInfo> dicField);

        /// <summary>
        /// 更新头像
        /// </summary>
        /// <param name="avatar"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> UpdateAvatar(string avatar, int userId);

        /// <summary>
        /// 更新邮箱地址
        /// </summary>
        /// <param name="emailAddress"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> UpdateEmail(string emailAddress, int userId);

        /// <summary>
        /// 更新手机号码
        /// </summary>
        /// <param name="mobileNo"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> UpdateMobile(string mobileNo, int userId);

        /// <summary>
        /// 更新会员登录次数
        /// </summary>
        /// <param name="userId"></param>
        Task<bool> UpdateLoginNum(int userId);

        /// <summary>
        /// 更新登录密码
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="encryPassword"></param>
        /// <returns></returns>
        Task<bool> UpdatePassword(int userId, string encryPassword);

        /// <summary>
        /// 修改安全(支付)密码
        /// </summary>
        /// <param name="userId"></param>
        /// <param name="encryPassword"></param>
        /// <returns></returns>
        Task<bool> UpdateSafePassword(int userId, string encryPassword);

        #endregion

        #region 获取会员信息

        /// <summary>
        /// 获取用户所有信息(包括副表的)
        /// </summary>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<UserInfo> GetFullUserInfo(int userId);

        Task<UserInfo> GetUserByName(string userName);
        Task<UserInfo> GetUserByMobile(string mobile);
        Task<UserInfo> GetUserByEmail(string email);

        #endregion

        #region 会员判断

        /// <summary>
        /// 会员名称是否已存在
        /// </summary>
        /// <param name="userName"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> IsExistsName(string userName, int userId = 0);

        /// <summary>
        /// 会员邮箱地址是否已存在
        /// </summary>
        /// <param name="email"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> IsExistsEmail(string email, int userId = 0);

        /// <summary>
        /// 会员手机是否已存在
        /// </summary>
        /// <param name="mobile"></param>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> IsExistsMobile(string mobile, int userId = 0);

        /// <summary>
        /// 检测是否有效的用户名，匹配正则如：^[\u4e00-\u9fa5a-zA-Z][\u4e00-\u9fa5a-zA-Z0-9@_-]{2,19}
        /// </summary>
        /// <param name="userName"></param>
        /// <returns></returns>
        bool IsValidUserName(string userName);

        #endregion     

        #region 删除会员同时删除副表

        /// <summary>
        /// 删除多条记录
        /// </summary>
        /// <param name="ids">主键ID多列</param>
        /// <returns></returns>
        bool DeleteAll(string ids);

        /// <summary>
        /// 删除会员所有信息
        /// </summary>
        /// <param name="userId"></param>
        /// <returns></returns>
        Task<bool> DelFullUserInfo(int userId);

        /// <summary>
        /// 删除会员所有信息
        /// </summary>
        /// <param name="userName"></param>
        /// <returns></returns>
        Task<bool> DelFullUserInfo(string userName);

        #endregion

        #region 导出会员资料

        /// <summary>
        /// 导出会员信息
        /// </summary>
        /// <param name="condition"></param>
        /// <returns></returns>
        DataTable GetExportUser(string condition);

        #endregion
    }
}