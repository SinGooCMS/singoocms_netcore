//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-03-31 11:10:41
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using SinGooCMS.Domain.Models;

namespace SinGooCMS.Domain.Interface
{
    public interface IDictsRepository: IRepositoryBase<DictsInfo>
    {
        #region 增/改/删

        /// <summary>
        /// 增加字典
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        Task<Result> AddDict(DictsInfo entity);
        /// <summary>
        /// 更新字典
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        Task<Result> UpdateDict(DictsInfo entity);
        /// <summary>
        /// 删除字典
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        Task<Result> DelDict(DictsInfo entity);

        #endregion

        /// <summary>
        /// 读取字典信息
        /// </summary>
        /// <param name="dictsName"></param>
        /// <returns></returns>
        Task<DictsInfo> GetDictsByName(string dictsName);

        /// <summary>
        /// 是否存在字典
        /// </summary>
        /// <param name="dictName">字典名是唯一的</param>
        /// <param name="Id"></param>
        /// <returns></returns>
        Task<bool> ExistsName(string dictName, int Id = 0);
        /// <summary>
        /// 是否存在字典项
        /// </summary>
        /// <param name="dictId"></param>
        /// <returns></returns>
        Task<bool> ExistsItem(int dictId);
        
        /// <summary>
        /// 读取字典列表
        /// </summary>
        /// <returns></returns>
        Task<IEnumerable<DictsInfo>> GetDicts();

        /// <summary>
        /// 读取缓存字典
        /// </summary>
        /// <param name="dictId"></param>
        /// <returns></returns>
        DictsInfo GetCacheDict(int dictId);
        /// <summary>
        /// 读取缓存字典
        /// </summary>
        /// <param name="dictName"></param>
        /// <returns></returns>
        DictsInfo GetCacheDict(string dictName);

    }
}