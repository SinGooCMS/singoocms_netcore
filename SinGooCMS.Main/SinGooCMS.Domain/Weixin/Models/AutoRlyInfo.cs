//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-03-31 10:35:51
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.IO;
using System.Linq;

namespace SinGooCMS.Domain.Models
{
    /// <summary>
    /// 微信自动回复
    /// </summary>
    [Serializable]
    [Table("weixin_AutoRly")]
    public partial class AutoRlyInfo
    {
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public AutoRlyInfo() 
        {
            //
        }
        
        #region 公共属性
        
        /// <summary>
        /// 主键
        /// </summary>
        [Key]
        public System.Int32 AutoID { get; set; } = 0;
        
        /// <summary>
        /// 回复类型：关注回复、关键字回复、默认回复
        /// </summary>
        public System.String RlyType { get; set; } = string.Empty;
        
        /// <summary>
        /// 关键字
        /// </summary>
        public System.String MsgKey { get; set; } = string.Empty;
        
        /// <summary>
        /// 消息文本
        /// </summary>
        public System.String MsgText { get; set; } = string.Empty;
        
        /// <summary>
        /// 描述
        /// </summary>
        public System.String Description { get; set; } = string.Empty;
        
        /// <summary>
        /// 消息媒体
        /// </summary>
        public System.String MediaPath { get; set; } = string.Empty;
        
        /// <summary>
        /// 链接地址
        /// </summary>
        public System.String LinkUrl { get; set; } = string.Empty;
        
        /// <summary>
        /// 时间戳
        /// </summary>
        public System.DateTime? AutoTimeStamp { get; set; } = new DateTime(1900, 1, 1);

        #endregion

        /// <summary>
        /// 信息类型
        /// </summary>
        [NotMapped]
        public WeixinMsgType MsgType
        {
            get
            {
                string[] arrImg = { ".jpg", ".jpeg", ".png", ".gif" };
                string[] arrVoice = { ".avi", ".wav", ".mp3", ".mid", ".mod", ".ra" };
                string[] arrVideo = { ".mp3", ".3gp", ".rmb", ".flv" };
                if (!string.IsNullOrEmpty(this.MediaPath))
                {
                    string strExt = Path.GetExtension(this.MediaPath).ToLower();
                    if (arrImg.Contains(strExt))
                        return WeixinMsgType.Image; //图文
                    else if (arrVoice.Contains(strExt))
                        return WeixinMsgType.Voice; //声音
                    else if (arrVideo.Contains(strExt))
                        return WeixinMsgType.Video; //视频
                }

                return WeixinMsgType.Text; //文本
            }
        }
    }

    public enum WeixinMsgType
    {
        [Description("文本")]
        Text,
        [Description("图片")]
        Image,
        [Description("语音")]
        Voice,
        [Description("视频")]
        Video,
        [Description("地理位置")]
        Location,
        [Description("连接信息")]
        Link,
        [Description("事件推送")]
        Event
    }
}