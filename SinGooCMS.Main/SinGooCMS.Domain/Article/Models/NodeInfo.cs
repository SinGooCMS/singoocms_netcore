//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-03-31 10:35:45
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using Newtonsoft.Json;
using SinGooCMS.Utility.Extension;

namespace SinGooCMS.Domain.Models
{
    /// <summary>
    /// 栏目信息
    /// </summary>
    [Serializable]
    [Table("cms_Node")]
    public partial class NodeInfo
    {
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public NodeInfo()
        {
            //
        }

        #region 公共属性

        /// <summary>
        /// 主键
        /// </summary>
        [Key]
        public System.Int32 AutoID { get; set; } = 0;

        /// <summary>
        /// 栏目名称
        /// </summary>
        public System.String NodeName { get; set; } = string.Empty;

        /// <summary>
        /// 栏目标识
        /// </summary>
        public System.String NodeIdentifier { get; set; } = string.Empty;

        /// <summary>
        /// 模型ID
        /// </summary>
        public System.Int32 ModelID { get; set; } = 0;

        /// <summary>
        /// 上级栏目ID
        /// </summary>
        public System.Int32 ParentID { get; set; } = 0;

        /// <summary>
        /// 上级栏目路径
        /// </summary>
        public System.String ParentPath { get; set; } = string.Empty;

        /// <summary>
        /// 层级
        /// </summary>
        public System.Int32 Depth { get; set; } = 0;

        /// <summary>
        /// 下级栏目集合
        /// </summary>
        public System.String ChildList { get; set; } = string.Empty;

        /// <summary>
        /// 栏目图像
        /// </summary>
        public System.String NodeImage { get; set; } = string.Empty;

        /// <summary>
        /// 栏目横幅
        /// </summary>
        public System.String NodeBanner { get; set; } = string.Empty;

        /// <summary>
        /// seo关键字
        /// </summary>
        public System.String SeoKey { get; set; } = string.Empty;

        /// <summary>
        /// seo描述
        /// </summary>
        public System.String SeoDescription { get; set; } = string.Empty;

        /// <summary>
        /// 分页记录数
        /// </summary>
        public System.Int16 ItemPageSize { get; set; } = 10;

        /// <summary>
        /// 自定义链接
        /// </summary>
        public System.String CustomLink { get; set; } = string.Empty;

        /// <summary>
        /// 栏目设置
        /// </summary>
        public System.String Setting { get; set; } = new NodeSetting().ToJson();

        /// <summary>
        /// 备注
        /// </summary>
        public System.String Remark { get; set; } = string.Empty;

        /// <summary>
        /// 是否显示在菜单（主栏目）
        /// </summary>
        public System.Boolean IsShowOnMenu { get; set; } = false;

        /// <summary>
        /// 是否显示在导航
        /// </summary>
        public System.Boolean IsShowOnNav { get; set; } = false;

        /// <summary>
        /// 是否置顶
        /// </summary>
        public System.Boolean IsTop { get; set; } = false;

        /// <summary>
        /// 是否推荐
        /// </summary>
        public System.Boolean IsRecommend { get; set; } = false;

        /// <summary>
        /// 是否最新
        /// </summary>
        public System.Boolean IsNew { get; set; } = false;

        /// <summary>
        /// 创建人
        /// </summary>
        public System.String Creator { get; set; } = string.Empty;

        /// <summary>
        /// 排序号
        /// </summary>
        public System.Int32 Sort { get; set; } = 99999;

        /// <summary>
        /// 语种
        /// </summary>
        public System.String Lang { get; set; } = "zh-cn";

        /// <summary>
        /// 时间戳
        /// </summary>
        public System.DateTime? AutoTimeStamp { get; set; } = new DateTime(1900, 1, 1);

        #endregion

        #region 自定义属性

        /// <summary>
        /// 根栏目ID
        /// </summary>
        [NotMapped]
        public System.Int32 RootID
        {
            get
            {
                /*
                 * ParentPath="0" 表示当前是顶级栏目，根目录就是自己
                 * ParentPath="0,1" 或者 ParentPath="0,1,2"
                 * 做为子目录时，排除0后的第1位就是根目录
                 */
                if (this.ParentPath.Trim().Length > 0)
                    return this.ParentPath.Equals("0")
                        ? this.AutoID
                        : this.ParentPath.ToIntArray()[1];

                return 0;
            }
        }

        /// <summary>
        /// 子栏目个数
        /// </summary>
        [NotMapped]
        public System.Int32 ChildCount
        {
            get
            {
                var len = this.ChildList.Split(',').Length - 1; //-1是排除自己
                return len < 0 ? 0 : len;
            }
        }

        /// <summary>
        /// 栏目URL
        /// </summary>
        [NotMapped]
        public string NodeUrl { get; set; }

        /// <summary>
        /// 栏目设置
        /// </summary>
        [NotMapped]
        public NodeSetting NodeSetting =>
            this.Setting.IsNullOrEmpty()
            ? new NodeSetting()
            : this.Setting.JsonToObject<NodeSetting>();

        #endregion

        #region 上级栏目

        /// <summary>
        /// 上级栏目
        /// </summary>
        [NotMapped]
        [JsonIgnore]
        public NodeInfo ParentNode { get; set; }

        #endregion

        #region 子栏目  

        /// <summary>
        /// 第一个子栏目ID
        /// </summary>
        [NotMapped]
        public int FirstChildID { get; set; }

        /// <summary>
        /// 直系下级栏目
        /// </summary>
        [NotMapped]
        [JsonIgnore]
        public List<NodeInfo> ChildNodes { get; set; }

        /// <summary>
        /// 根据下标取直系下级栏目
        /// </summary>
        /// <param name="index">从0开始</param>
        /// <returns></returns>
        [NotMapped]
        [JsonIgnore]
        public NodeInfo this[int index] =>
            index == 0
            ? ChildNodes.FirstOrDefault()
            : ChildNodes.Skip(index).FirstOrDefault();

        #endregion

        /// <summary>
        /// 单页文章ID
        /// </summary>
        [NotMapped]
        public int SingleContId { get; set; }
    }
}