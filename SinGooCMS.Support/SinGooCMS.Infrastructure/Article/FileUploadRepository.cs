//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-04-03 15:48:56
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.IO;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using SinGooCMS.Domain.Models;
using SinGooCMS.Domain.Interface;
using SinGooCMS.Utility;
using SinGooCMS.Utility.Extension;
using SinGooCMS.Plugins.OSS;

namespace SinGooCMS.Infrastructure
{
    public class FileUploadRepository : RespositoryBase<FileUploadInfo>, IFileUploadRepository
    {        
        private readonly IUser user;
        private readonly IManager manager;
        private readonly ICacheStore cacheStore;

        public FileUploadRepository(IUser _user, IManager _manager, ICacheStore _cacheStore)
        {
            this.user = _user;
            this.manager = _manager;
            this.cacheStore = _cacheStore;            
        }

        public async Task<int> Add(string virtualPath, UserType userType = UserType.Manager)
        {
            var config = cacheStore.CacheBaseConfig;
            string absoluteFilePath = SinGooBase.GetMapPath(virtualPath);
            if (File.Exists(absoluteFilePath))
            {
                var fileInfo = new FileInfo(absoluteFilePath);
                var fileUploadInfo = new FileUploadInfo
                {
                    FolderID = -1, //文件夹ID -1表示未归类
                    FileName = fileInfo.Name,
                    FileExt = fileInfo.Extension,
                    FileSize = (int)fileInfo.Length,
                    LocalPath = virtualPath.Substring(0, virtualPath.LastIndexOf('/')),
                    VirtualFilePath = virtualPath,
                    Thumb = "", //只有图片才有缩略图
                    OriginalPath = "", //原文件
                    UserType = userType.ToString(),
                    UserName = userType == UserType.Manager ? manager.AccountName : user.UserName,
                    DownloadCount = 0, //下载次数
                    AutoTimeStamp = System.DateTime.Now
                };

                if (fileUploadInfo.FileExt.IsImage())
                {
                    string thumbFileName = virtualPath.Replace(fileUploadInfo.FileExt, "_thumb" + fileUploadInfo.FileExt); //缩略图名称
                    int ThumbSize_Width = config.ThumbSize.Split('X').Length > 0 ? config.ThumbSize.Split('X')[0].ToInt() : 100;
                    int ThumbSize_Height = config.ThumbSize.Split('X').Length > 1 ? config.ThumbSize.Split('X')[1].ToInt() : 100;

                    ThumbnailCutMode thumbMode;
                    if (string.IsNullOrEmpty(config.ThumbModel))
                        thumbMode = ThumbnailCutMode.Cut;
                    else
                        thumbMode = EnumUtils.StringToEnum<ThumbnailCutMode>(config.ThumbModel);

                    //生成缩略图
                    ImageUtils.MakeThumbnail(absoluteFilePath, ThumbSize_Width, ThumbSize_Height, SinGooBase.GetMapPath(thumbFileName), thumbMode);
                    fileUploadInfo.Thumb = thumbFileName;
                }

                return await AddAsync(fileUploadInfo);
            }

            return -1;
        }

        public async Task<FileUploadInfo> GetByFileName(string virtualPath) =>
            await dbSet.Where(p => p.VirtualFilePath == virtualPath).FirstOrDefaultAsync();

        public async Task<int> GetUserUpCount(string userName) =>
           await dbSet.Where(p => p.UserType == UserType.User.ToString() && p.UserName == userName).CountAsync();

        public async Task<decimal> GetUserUpTotalSize(string userName) =>
            await dbSet.Where(p => p.UserType == UserType.User.ToString() && p.UserName == userName).SumAsync(p => p.FileSize);

        public async Task<int> GetManagerUpCount(string managerName) =>
           await dbSet.Where(p => p.UserType == UserType.Manager.ToString() && p.UserName == managerName).CountAsync();

        public async Task<decimal> GetManagerUpTotalSize(string managerName) =>
            await dbSet.Where(p => p.UserType == UserType.Manager.ToString() && p.UserName == managerName).SumAsync(p => p.FileSize);

        public async Task<bool> MoveToFolder(string ids, int folderID = -1) =>
            await UpdateAsync($"FolderID = {folderID}", $"AutoID in ({ids})");

        public async Task<bool> DelBatAndFile(string ids)
        {
            var lstFiles = await dbSet.Where(p => ids.ToIntArray(',').Contains(p.AutoID)).ToListAsync();
            if (lstFiles != null)
            {
                lstFiles.ForEach(async item =>
                {
                    //删除记录
                    if (await DeleteAsync(item))
                    {
                        #region 删除文件

                        string absoluteLocalPath = SinGooBase.GetMapPath(item.LocalPath);

                        //删除本地的文件
                        var localFile = FileUtils.Combine(absoluteLocalPath, item.FileName);
                        if (File.Exists(localFile))
                            File.Delete(localFile);

                        //删除缩略图(如果有的话)
                        var localThumbFile = FileUtils.Combine(absoluteLocalPath, item.ThumbFileName);
                        if (File.Exists(localThumbFile))
                            File.Delete(localThumbFile);

                        //删除水印图(如果有的话)
                        var localWatermarkFile = FileUtils.Combine(absoluteLocalPath, item.WatermarkFileName);
                        if (File.Exists(localWatermarkFile))
                            File.Delete(localWatermarkFile);

                        //删除阿里云OSS文件
                        if (cacheStore.CacheBaseConfig.EnableAliyunOSS && item.VirtualFilePath.IndexOf("http://") != -1 || item.VirtualFilePath.IndexOf("https://") != -1)
                        {
                            var oss = new AliyunOSS(AliyunOSSConfig.Load()); //从配置文件（/config/aliyunoss.config）里加载
                            string ossFile = item.VirtualFilePath.Replace("http://", "").Replace("https://", ""); //img.ue.net.cn/2017/11/201711069843188.jpg
                            ossFile = ossFile.Substring(ossFile.IndexOf("/") + 1); // 2017/11/201711069843188.jpg
                            oss.DeleteObject(ossFile); //云存储的key是文件的虚拟路径，如果在本地会包括本地路径
                        }

                        #endregion
                    }
                });

                return true;
            }

            return false;
        }

        public int UnFiledCount =>
            NoTrackQuery().Where(p => p.FolderID == -1).Count();
    }
}