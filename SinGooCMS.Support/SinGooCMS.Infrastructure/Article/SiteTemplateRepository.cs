//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-04-03 15:48:51
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using System.Threading.Tasks;
using SinGooCMS.Domain.Models;
using SinGooCMS.Domain.Interface;
using SinGooCMS.Utility;

namespace SinGooCMS.Infrastructure
{
    public class SiteTemplateRepository : RespositoryBase<SiteTemplateInfo>, ISiteTemplateRepository
    {
        private readonly ICacheStore cacheStore;
        public SiteTemplateRepository(ICacheStore _cacheStore)
        {
            this.cacheStore = _cacheStore;
        }

        #region 增/改/删

        public async Task<int> AddTmplAsync(SiteTemplateInfo tmplInfo)
        {
            var result = await AddAsync(tmplInfo);
            cache.Del(CacheKey.CKEY_SITETEMPLATE);
            return result;
        }

        public async Task<bool> UpdateTmplAsync(SiteTemplateInfo tmplInfo)
        {
            var result = await UpdateAsync(tmplInfo);
            cache.Del(CacheKey.CKEY_SITETEMPLATE);
            return result;
        }

        public async Task<bool> DeleteTmplAsync(SiteTemplateInfo tmplInfo)
        {
            if (await DeleteAsync(tmplInfo))
            {
                //清除缓存
                cache.Del(CacheKey.CKEY_SITETEMPLATE);
                //同时删除模板文件
                string templateDir = SinGooBase.GetMapPath(tmplInfo.TemplatePath);
                if (System.IO.Directory.Exists(templateDir))
                    System.IO.Directory.Delete(templateDir, true);

                return true;
            }

            return false;
        }

        public async Task<bool> SetDefaultTmpl(int templateID)
        {
            var lstSQL = new List<string>();
            lstSQL.Add($" UPDATE {tableName} SET IsDefault=0; ");
            lstSQL.Add($" UPDATE {tableName} SET IsDefault=1 WHERE {key}={templateID}; ");
            await DbAccess.ExecTransAsync(lstSQL);

            cache.Del(CacheKey.CKEY_SITETEMPLATE);
            return true;
        }

        #endregion

        public SiteTemplateInfo GetDefaultTmpl() =>
            cacheStore.CacheSiteTmpls.Where(p => p.IsDefault).FirstOrDefault();

        public SiteTemplateInfo GetCacheTmpl(int id) =>
            cacheStore.CacheSiteTmpls.Where(p => p.AutoID == id).FirstOrDefault();

        public IEnumerable<string> GetTmplDirs()
        {
            var dirPath = SinGooBase.GetMapPath(SinGooBase.TemplateBasePath);
            if (Directory.Exists(dirPath))
            {
                var lst = new List<string>();
                var dir = new DirectoryInfo(dirPath);
                foreach (var item in dir.GetDirectories())
                {
                    lst.Add(FileUtils.Combine(SinGooBase.TemplateBasePath, item.Name));
                }
                return lst;
            }

            return null;
        }
    }
}