//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成
//     Author:16826375@qq.com http://www.singoo.top
//     生成时间为:2020-04-03 15:48:46
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Threading.Tasks;
using SinGooCMS.Domain.Models;
using SinGooCMS.Domain.Interface;

namespace SinGooCMS.Infrastructure
{
    public class AccountDetailRepository : RespositoryBase<AccountDetailInfo>, IAccountDetailRepository
    {
        private readonly IUserLevelRepository levelRepository;

        public AccountDetailRepository(IUserLevelRepository _userLevel)
        {
            this.levelRepository = _userLevel;
        }

        public async Task<bool> AddAmount(UserInfo user, int intOpType, double douOpValue, string strRemark)
        {
            int result = 0;
            if (douOpValue > 0)
            {
                var accDetail = new AccountDetailInfo()
                {
                    UserID = user.AutoID,
                    UserName = user.UserName,
                    Unit = BalanceType.Amount.ToString(),
                    Before = (double)user.Amount,
                    OpValue = douOpValue,
                    OpType = (byte)intOpType,
                    After = intOpType == 1 ? ((double)user.Amount + douOpValue) : ((double)user.Amount - douOpValue),
                    Remark = strRemark,
                    Operator = user.UserName,
                    OperateDate = System.DateTime.Now
                };

                dbSet.Add(accDetail); //添加账户明细
                user.Amount = intOpType == 0 ? user.Amount - (decimal)douOpValue : user.Amount + (decimal)douOpValue;
                if (user.Amount < 0)
                    user.Amount = 0;

                dbo.User.Update(user); //更新会员金额信息
                result = await dbo.SaveChangesAsync();
            }

            return result > 0;
        }

        public async Task<bool> AddIntegral(UserInfo user, int intOpType, double douOpValue, string strRemark)
        {
            int result = 0;
            if (douOpValue > 0)
            {
                var accDetail = new AccountDetailInfo()
                {
                    UserID = user.AutoID,
                    UserName = user.UserName,
                    Unit = BalanceType.Integral.ToString(),
                    Before = user.Integral,
                    OpValue = douOpValue,
                    OpType = (byte)intOpType,
                    After = intOpType == 1 ? (user.Integral + douOpValue) : (user.Integral - douOpValue),
                    Remark = strRemark,
                    Operator = user.UserName,
                    OperateDate = System.DateTime.Now
                };

                dbSet.Add(accDetail);
                user.Integral = intOpType == 0 ? user.Integral - (int)douOpValue : user.Integral + (int)douOpValue;
                if (user.Integral < 0)
                    user.Integral = 0;
                //积分达到一定数量 可升级会员等级
                var newLevel = (await levelRepository.GetAllAsync()).Where(p => p.Integral <= user.Integral).OrderByDescending(p => p.Integral).FirstOrDefault();
                int newLevelId = newLevel != null ? newLevel.AutoID : 0;

                if (newLevelId > user.LevelID)
                    user.LevelID = newLevelId; //更新成为新的会员等级

                dbo.User.Update(user);
                result = await dbo.SaveChangesAsync();
            }

            return result > 0;
        }
    }
}